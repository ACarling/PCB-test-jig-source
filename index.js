const express = require('express')
const app = express()
const port = 3000
const fs = require('fs');

app.use(express.static('source'));
app.use(express.urlencoded());          // allows the python interface


app.get('/', (req, res) => {      //serves dash (page.html) as front page 
    res.sendFile('page.html', {root: './source'});
});



//--------------------------------- TO show test status to front end (post connects to testboard.js and get connects to page.html) ---------------------------------\\
var currentTest = "";

app.get('/result', (req, res) => {
    res.send(currentTest);
});


//--------------------------------- testBoard (call python interface) ---------------------------------\\

const manager = require('./source/dbManager');

//script to make the python do its thing and then put the results in a json file the server

call_visaInterface = function (boardNumber) {

    var spawn = require("child_process").spawn;
    var process = spawn('python3', ["./source/visaInterface.py"]);
    let dataString = '';
    console.log(" >> loaded python attempting to gain output: ")

    process.stdout.on('data', function (data) { //data is everything printed in the python script
        dataString += data.toString(); //TODO: use this to get error messages to the front end probably 
                                       //   especially seeings how the data is put into a json file rather 
                                       //   rather than the output stream
        currentTest = data.toString();
        console.log(currentTest);
    });

    process.stdout.on('end', function () { // literally just prints the data from the json generated by the python script 
        //JSON.parse(dataString);
        currentTest = null;
        let data = JSON.parse(fs.readFileSync('./source/results.json'));
        
        console.log(" >> recieved: " + data.rd1.microHenries + ", " + data.rd1.ohms);
        manager.addJsonToDB(boardNumber, data);
    });
}


//--------------------------------- FORM PROCESSING from frontend ---------------------------------\\

app.post('/submit-form', (req, res) => { // is activated whenever a get request is seen to be made to submit-form
    let data = req.body.data;           //||
    let number = req.body.boardNumber;  //|| gets the data from the front end (form data (boardNumber) and if the button was valid (data))
    console.log(data + ", " + number); //logs recieved data

    if(data == "testBoard") { // if the button corresponding with testBoard was pressed
        console.log(">> attempting to run jig");    // make it test board 
        call_visaInterface(number);                  // call function in testBoad.js script which calls python script and adds output to database
    }
    res.end()
});

app.listen(port, () => console.log(`Example app listening on port ${port}!`));




/* TODO:
* python script
*   > make python script connect to gpio pins and iterate through the relay while recording data through visa interface: return results through json
* database module
*   > make method to retest boards - delete the board of whatever board number is attempted to be tested and replace its data with new data
*   > method to create csv spreadsheet from sorted database and return it to the user
*/